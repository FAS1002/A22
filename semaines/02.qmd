---
title: "Semaine 2"
description: "Contenu pour la semaine, incluant les lectures et les modules"
author: "Samuel Guay"
date: "9/13/2022"
categories:
  - cours
  - semaine
---

## Objectif de la semaine 2

Se familiariser avec quelques outils et concepts d'informatique afin d'√™tre en
mesure d'effectuer des op√©rations simples dans un syst√®me de fichiers √† l'aide
de l'interface en ligne de commande.

√Ä la fin du cours, vous devriez √™tre en mesure de r√©pondre √† ces questions:

-   Comment puis-je naviguer dans mon ordinateur?

-   Comment puis-je voir les fichiers et les dossiers sur ma machine?

-   Comment puis-je sp√©cifier l'emplacement d'un fichier ou d'un dossier sur
    mon ordinateur?

-   Comment puis-je cr√©er, copier et supprimer des fichiers et des dossiers?

-   Comment puis-je modifier des fichiers ou des dossiers?

Vous √™tes probablement d√©j√† capables de r√©pondre √† toutes ces questions avec un
interface graphique. √âvidemment, je m'attends √† ce que vous soyez capables d'y
r√©pondre √©galement √† partir d'un terminal.

## 1. Lectures

### Programmer avec R - Chapitre 1 et 2

#### 1.1 Lire le **chapitre 1 (pages 1-17)** du livre [**Programmer avec R**](https://edstem.org/us/courses/6933/resources?download=20545).

::: callout-important
Vous pouvez t√©l√©charger le livre en cliquant sur le titre ci-haut ou en vous
rendant sur la page des
[*ressources*](https://edstem.org/us/courses/6933/resources)*.* Pour
t√©l√©charger le livre et tous les fichiers d'exercices et de code sur la [page
officielle](https://gitlab.com/vigou3/programmer-avec-r/-/package_files/49736237/download).
:::

-   Si vous vous demandez "*Est-ce que toutes les sections sont vraiment
    importantes?*", je vous dirais que la section **1.3** est la moins
    pertinente pour le cours. Cela ne lui enl√®ve pas d'importance pour autant,
    mais si vous √™tes press√©.e.s par le temps, cela vous all√©gera la t√¢che.

Vous pouvez faire les exercices du chapitre, mais elles ne sont pas
obligatoires pour le cours.

#### 1.2 Lire le **chapitre 2 (pages 21-38)** du livre [**Programmer avec R**](https://edstem.org/us/courses/6933/resources?download=20545)

-   Exercices plus pertinents pour le cours: **2.2**, **2.3**, **2.4**.

### üéâ R√©sum√© du chapitre üéâ

Bonne nouvelle, l'auteur du livre a mis en ligne une vid√©o r√©sumant le chapitre
que vous pouvez visionner! La qualit√© de la vid√©o est aussi excellente que
celle du livre!

{{< video https://youtu.be/WZB3rxarjw8 >}}

## 2. Ligne de commande (CLI)

## 2.1 Introduction

Les humains et les ordinateurs interagissent g√©n√©ralement de diff√©rentes
mani√®res, par exemple via un clavier et une souris, des interfaces √† √©cran
tactile ou en utilisant des syst√®mes de reconnaissance vocale. Le moyen le plus
largement utilis√© pour interagir avec les ordinateurs personnels est appel√© une
[interface graphique](https://fr.wikipedia.org/wiki/Interface_graphique) ou
**GUI** pour [**G**raphical **U**ser
**I**nterface](https://en.wikipedia.org/wiki/Graphical_user_interface) en
anglais. Avec une interface graphique, nous donnons des instructions √†
l'ordinateur en cliquant sur une souris et en utilisant des interactions
guid√©es par des menus. √Ä titre d'exemple, lorsque vous naviguez sur le site et
que vous cliquez sur un lien votre ordinateur re√ßoit la commande et ex√©cute
l'action (ou une s√©rie d'actions) pour que la page apparaisse.

Alors que l'aide visuelle d'une interface graphique rend la navigation et
l'apprentissage intuitifs, cette fa√ßon de fournir des instructions √† un
ordinateur est tr√®s mal adapt√©e, notamment pour automatiser des t√¢ches ou
ex√©cuter des centaines de t√¢ches rapidement. Si les interfaces graphiques ont
grandement facilit√© l'interaction humain-machine, elles n'ont pas pour autant
fait disparaitre ou rendu obsol√®te la ligne de commande, particuli√®rement dans
la pratique de la programmation.

::: callout-note
## Mise en situation

**Imaginez la t√¢che suivante:**\
Pour une recherche documentaire, vous devez copier la troisi√®me ligne de mille
fichiers texte dans mille r√©pertoires diff√©rents et la coller dans un seul
fichier. En utilisant une interface graphique, non seulement vous cliqueriez
sur votre bureau pendant plusieurs, voire des dizaines, d'heures, mais vous
pourriez √©galement commettre une erreur dans le processus d'ex√©cution de cette
t√¢che r√©p√©titive. Une erreur aussi simple que de copier la deuxi√®me ou la
quatri√®me ligne par inadvertance √† deux ou trois reprises pourrait invalider
vos r√©sultats.
:::

C'est, entre autres, dans des situations comme celle-ci que nous pouvons
profiter de la puissance de la ligne de commande. La ligne de commande est la
plus ancienne des interfaces pour interagir avec les ordinateurs. La ligne de
commande du syst√®me d'exploitation demeure une interface importante pour les
programmeurs.

-   Parfois ***plus simple*** qu'une interface graphique

-   Souvent ***plus rapide*** qu'une interface graphique

-   Parfois la **seule option** (notamment pour les utilitaires Unix comme
    [`grep`](https://en.wikipedia.org/wiki/Grep),
    [`sed`](https://en.wikipedia.org/wiki/Sed),
    [`awk`](https://en.wikipedia.org/wiki/AWK))

Avant d'aller plus loin, abordons un peu de terminologie essentielle:

-   (Interface en) **Ligne de commande** - ***Command Line** Interface* -
    **CLI**

    -   Mode d'interaction avec un programme informatique dans lequel
        l'utilisateur ou l'utilisatrice dicte les commandes et re√ßoit les
        r√©ponses de l'ordinateur en\
        mode [texte.]{.underline}

<!-- -->

-   **Interpr√©teur** de commande - ***Terminal**, Shell*

    -   Programme qui g√®re l'interface en ligne de commande.

<!-- -->

-   Invite de commande - ***Command prompt***

    -   Symbole affich√© par l'interpr√©teur de commande pour indiquer qu'il est
        pr√™t √† recevoir une commande.

L'interpr√©teur de commande Unix (shell) est √† la fois une interface de ligne de
commande (CLI) et un langage de script, permettant d'effectuer automatiquement
et rapidement des t√¢ches r√©p√©titives. Avec les commandes appropri√©es, le shell
ou terminal peut r√©p√©ter des t√¢ches avec ou sans modification autant de fois
que nous le souhaitons, souvent en quelques secondes. En utilisant un terminal,
la t√¢che dans l'exemple de la recherche documentaire ci-haut peut √™tre
accomplie en quelques secondes seulement.

::: callout-tip
## Astuce

Lorsque vous cherchez sur internet pour obtenir de l'aide en lien avec ces
terminalogies, vous allez rencontrer beaucoup de termes diff√©rents que les gens
utilisent de fa√ßons interchangeables, par ex. cli, terminal, shell, bash,
zshell, command line, etc. Sachez que m√™me si leur d√©finition varie, la plupart
des utilisateurs et des utilisatrices mettent ces termes dans un m√™me paquet.
Lorsque nous d√©butons, je conseille souvent de ne pas trop s'ent√™ter avec ces
terminologies puisque vous trouverez r√©ponses peu importe le terme utilis√©.
:::

Dans le cadre du cours, nous nous concentrerons sur les interpr√©teurs de
commande Unix, de type [Bash](https://en.wikipedia.org/wiki/Bash_(Unix_shell)),
puisque ceux-ci sont les plus r√©pandus avec [Z
Shell](https://en.wikipedia.org/wiki/Z_shell) (Zsh). Il existe de nombreux
programmes qui sont des shells; Bash n'est qu'un exemple. **B**ourne **A**gain
**SH**ell a √©t√© nomm√© ainsi parce qu'il est d√©riv√© d'un shell √©crit par Stephen
Bourne).

Pour les quelques commandes que nous effectuerons, les individus sur MacOS qui
utiliseront Zsh (d√©sormais install√© par d√©faut \>= Catalina) ne devraient
rencontrer aucun probl√®me. Pour ceux et celles sur Windows, nous utiliserons
[git-bash](https://gitforwindows.org/) √©ventuellement pour pour ex√©cuter les
commandes puisque ce sera les m√™mes commandes et que ligne de commande Windows
est diff√©rente. Nous apprendrons comment se servir de
[Git](https://git-scm.com) pour faire la gestion de versions de nos documents
et git-bash est utilis√© dans ce cas.

Cependant, si votre terminal ne fonctionne pas pour une raison que vous
ignorez, vous pourrez tout de m√™me vous pratiquer sur
[rstudio.cloud](rstudio.cloud) qui permet d'utiliser bash dans l'onglet
\`terminal\`.

## 2.2 Prochaine √©tape: Pratique

Pour la suite, vous devez vous rendre sur Ed pour une session de pratique et
d'introduction √† la ligne de commande!\
\
‚û°Ô∏è <https://edstem.org/us/courses/6933/lessons/22144/>.

## Mais\... ce n'est pas un cours sur R?

Vous vous demandez peut-√™tre pourquoi d√©buter le cours en vous enseignant
quelques commandes essentielles en ligne de commande? Simplement parce que la
plupart des gens que j'aide en d√©but de parcours ont des probl√®mes
d'installation et d'acc√®s √† leurs fichiers de donn√©es. Souvent, ces derniers ne
comprennent pas les principes de chemins absolus et relatifs par exemple,
concepts qui deviennent concrets lorsqu'on utilise la CLI. Utiliser davantage
la ligne de commande leur permet √©galement d'optimiser davantage les m√©thodes
de travail et √©ventuellement automatiser des pipelines complets d'analyses.

L'utilisation d'un terminal demandera un certain effort et un certain temps
d'apprentissage. Alors qu'une interface graphique vous pr√©sente des choix √†
s√©lectionner, les choix CLI ne vous sont pas automatiquement pr√©sent√©s, vous
devrez donc apprendre quelques commandes comme un nouveau vocabulaire dans une
langue que vous √©tudiez. Cependant, contrairement √† une langue parl√©e, un petit
nombre de ¬´ mots ¬ª (ou commandes) vous permet de faire un long chemin, et nous
couvrirons ces quelques commandes.

La grammaire d'un shell vous permet de combiner des outils qui existent dans de
puissants pipelines et de g√©rer automatiquement de gros volumes de donn√©es. Des
s√©quences de commandes peuvent √™tre √©crites dans un script, am√©liorant la
reproductibilit√© de vos travaux, nous y viendrons au courant de la session.

De plus, la ligne de commande est souvent le moyen le plus simple, parfois le
seul, d'interagir avec des serveurs √† distance (par exemple dans le *nuage*) et
des superordinateurs comme les grappes de calcul (*clusters*) de [Calcul
Qu√©bec](https://www.calculquebec.ca/) et [Calcul
Canada](https://www.computecanada.ca/accueil/?lang=fr). En science des donn√©es,
la familiarit√© avec un terminal est presque essentielle pour ex√©cuter une
vari√©t√© d'outils et de ressources sp√©cialis√©s, y compris des syst√®mes
informatiques haute performance. Puisque les clusters et les syst√®mes de *cloud
computing* deviennent de plus en plus populaires pour le traitement des donn√©es
scientifiques, √™tre capable d'interagir dans un terminal devient une comp√©tence
n√©cessaire. Nous pouvons nous appuyer sur les comp√©tences en ligne de commande
couvertes ici pour aborder un large √©ventail de questions scientifiques et de
d√©fis informatiques.

## 3. Derni√®re lecture!

Pour terminer, veuillez lire l'article [*Ten simple rules for teaching yourself
R*](https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1010372)
de [**Lawlor et al.
(2022)**](https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1010372)
Vous pouvez aussi regarder [le thread sur
Twitter](https://twitter.com/Jake_Lawlor1/status/1565422331178192897) qui
r√©sume bien l'article pour sauver du temps.

![](/assets/img/terminal.png){fig-align="center" width="450"}

## 4. Module #2

Lorsque vos lectures sont termin√©es, vous pouvez aller compl√©ter le [module #2
sur Ed](https://edstem.org/us/courses/6933/lessons/22446/slides/129346) cette
fois-ci!

::: callout-important
N'oubliez pas de compl√©ter les 3 premiers cours dans Swirl \> 1: R Programming
\> 1: Basic Building Blocks, puis 2: Workspace and Files et 3: Sequences of
Numbers.\
\
Dans la console R, `swirl()` puis suivez les √©tapes pour vous rendre dans R
Programming.
:::

**Vous pouvez envoyer vos captures d'√©cran dans un *thread priv√©* sur Ed. Vous
pouvez envoyer toutes vos captures d'√©cran de Swirl dans le m√™me *thread*.**

Bonne semaine :)

-------------------------------------------------------------------------------

<div>

::: {.small .muted}
Partie sur la ligne de commande adapt√©e de [Shell Novice - The Carpentries
(CC-BY)](https://swcarpentry.github.io/shell-novice/)
:::

</div>
