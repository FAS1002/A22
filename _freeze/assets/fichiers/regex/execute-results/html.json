{
  "hash": "616eacf6c45b439c771fee24ddc102f7",
  "result": {
    "markdown": "---\ntitle: regex.qmd\n---\n\n\n## À la découverte des expressions régulières avec R (et d'autres packages au passage...)\n\nLes **expressions régulières** sont communément appelées **regex** ou\n**regexp** pour **regular expressions** en anglais. Selon Wikipédia, une\nexpression régulière est \"une chaîne de caractères, qui décrit, selon une\nsyntaxe précise, un ensemble de chaînes de caractères possibles\". Si vous\nn'avez jamais entendu parlé des regex, il se peut que cette définition ne vous\naide pas à comprendre le concept. Nous tenterons de démystifier le tout au\ncours de ces exercices.\n\nÀ titre de rappel, cet\n[aide-mémoire](https://raw.githubusercontent.com/rstudio/cheatsheets/main/translations/french/regex_fr.pdf)\nvous sera drôlement utile!\n\nEn résumé, ces expressions permettent de décrire des motifs (patterns) à l'aide\nde formules \"*relativement simples*\" pour trouver, valider, extraire ou\nmodifier du texte ou des nombres.\n\n## Mission d'aujourd'hui:\n\nRécolter le plus d'information possible qui se trouve dans les tableaux de la\npage suivante:\n<https://tc.canada.ca/fr/aviation/exploitation-aeroports-aerodromes/liste-aeroports-appartenant-transports-canada>.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.4 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.0      ✔ stringr 1.4.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(magrittr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'magrittr'\n\nThe following object is masked from 'package:purrr':\n\n    set_names\n\nThe following object is masked from 'package:tidyr':\n\n    extract\n```\n:::\n\n```{.r .cell-code}\nlibrary(rvest)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'rvest'\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nURL <- \"https://tc.canada.ca/fr/aviation/exploitation-aeroports-aerodromes/liste-aeroports-appartenant-transports-canada\"\n```\n:::\n\n\n### Début de solution en base R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbase_raw_html <- read_html(x = URL)\nbase_html_table <- html_elements(x = base_raw_html, css = \"table\")\nbase_tables <- html_table(x = base_html_table)\n\n# base_table <- rbind(base_tables[[1]], base_tables[[2]], base_tables[[3]])\n\n\nnames(base_tables[[3]])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Territoire\"   \"Aéroport\"     \"Exploité par\"\n```\n:::\n:::\n\n\n⚠️ Erreur! Une colonne n'est pas nommée de façon identique, donc ne fonctionne\npas... Corrigeons la situation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(base_tables[[3]])[1] <- \"Province/Territoire\"\n\nbase_table <- rbind(base_tables[[1]], base_tables[[2]], base_tables[[3]])\n\nbase_table\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 44 × 3\n   `Province/Territoire`  Aéroport                `Exploité par`                \n   <chr>                  <chr>                   <chr>                         \n 1 \"Colombie-Britannique\" Penticton               \"Transports Canada\\n\\t\\t\\t#10…\n 2 \"\"                     Port Hardy              \"Transports Canada\\n\\t\\t\\tC.P…\n 3 \"\"                     Sandspit                \"Transports Canada\\n\\t\\t\\tC.P…\n 4 \"\"                     Havre de Victoria       \"Transports Canada\\n\\t\\t\\t12,…\n 5 \"Manitoba\"             Churchill               \"Transports Canada\\n\\t\\t\\tC.P…\n 6 \"Québec\"               Chevery                 \"Municipalité de la Côte-Nord…\n 7 \"\"                     Lourdes-de-Blanc-Sablon \"Transports Canada\\n\\t\\t\\tAir…\n 8 \"\"                     Sept-Îles               \"Transports Canada\\n\\t\\t\\t100…\n 9 \"\"                     Natashquan              \"Municipalité de Natashquan\\n…\n10 \"\"                     Eastmain River          \"Transports Canada\\n\\t\\t\\ta/s…\n# … with 34 more rows\n```\n:::\n\n```{.r .cell-code}\n# Solution en Base R\nbase_table$`Province/Territoire` <- ifelse(test = is.na(base_table$`Province/Territoire`),\n                                  yes = base_table$Territoire, no = base_table$`Province/Territoire`)\nbase_table$Territoire <- NULL\n\nrm(list=(ls(pattern = \"base*\")))\n```\n:::\n\n\n## Solution à la Tidyverse\n\n\n::: {.cell}\n\n```{.r .cell-code}\nURL <- \"https://tc.canada.ca/fr/aviation/exploitation-aeroports-aerodromes/liste-aeroports-appartenant-transports-canada\"\n\n\ntables <- read_html(x = URL) %>%\n    html_elements(css = \"table\") %>%\n    html_table()\n\ntable <- dplyr::bind_rows(tables[[1]],\n                          tables[[2]],\n                          tables[[3]],\n                          .id = \"type\")\n\n# ou solution alternative équivalente\ntables %>% purrr::map_dfr(bind_rows, .id = \"type\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 44 × 5\n   type  `Province/Territoire`  Aéroport                `Exploité par`   Terri…¹\n   <chr> <chr>                  <chr>                   <chr>            <chr>  \n 1 1     \"Colombie-Britannique\" Penticton               \"Transports Can… <NA>   \n 2 1     \"\"                     Port Hardy              \"Transports Can… <NA>   \n 3 1     \"\"                     Sandspit                \"Transports Can… <NA>   \n 4 1     \"\"                     Havre de Victoria       \"Transports Can… <NA>   \n 5 1     \"Manitoba\"             Churchill               \"Transports Can… <NA>   \n 6 1     \"Québec\"               Chevery                 \"Municipalité d… <NA>   \n 7 1     \"\"                     Lourdes-de-Blanc-Sablon \"Transports Can… <NA>   \n 8 1     \"\"                     Sept-Îles               \"Transports Can… <NA>   \n 9 1     \"\"                     Natashquan              \"Municipalité d… <NA>   \n10 1     \"\"                     Eastmain River          \"Transports Can… <NA>   \n# … with 34 more rows, and abbreviated variable name ¹​Territoire\n```\n:::\n:::\n\n\n### Remplir les rangées de la colonne `Province/Territoire`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable <- table %>% dplyr::rename(province_territoire = `Province/Territoire`,\n                        aeroport = Aéroport,\n                        exploited_by = `Exploité par`,\n                        territoire = Territoire)\n\ntable$province_territoire <- dplyr::coalesce(table$province_territoire, \n                                              table$territoire)\n\n\n\ntable[table == \"\"] <- NA\n# equivalent en tidyverse\ntable$province_territoire <- table$province_territoire %>% dplyr::na_if(y = \"\")\ntable <- table %>% tidyr::fill(province_territoire, .direction = \"down\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable <- table %>% dplyr::select(-territoire)\n```\n:::\n\n\nExtraction des codes d'aéroports\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# solution #1\nx <- table %>% mutate(new_col = str_extract(string = aeroport, pattern = \"[A-Z]{3}\"))\n\ntable <- table %>% tidyr::extract(col = aeroport,\n                         into = \"code_aeroport\",\n                         regex = \"(Y[A-Z][A-Z])\", \n                         remove = FALSE)\n\ntable$aeroport <- table$aeroport %>%\n    stringr::str_remove_all(pattern = \"\\\\(.*\\\\)\") %>%\n    stringr::str_squish()\n```\n:::\n\n\n## Recodage des types d'aéroport\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- table %>% mutate(type_nouveau = recode(type,\n                                            \"1\" = \"Petits aéroports\",\n                                            \"2\" = \"Aéroports nationaux\", \n                                            \"3\" = \"Aéroports nationaux exploités par des administrations territoriales\"))\n\nx <- x %>% mutate(type_nouveau_case = case_when(type == 1 ~ \"Petits aéroports\", \n                                               type == 2 ~ \"Aéroports nationaux\",\n                                               type == 3 ~ \"Aéroports nationaux exploités par des administrations territoriales\"))\n```\n:::\n\n\n## Il ne reste plus qu'à extraire l'information qui se trouve dans `table$exploited_by`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable$exploited_by\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Transports Canada\\n\\t\\t\\t#109-3000 Airport Road\\n\\t\\t\\tPenticton (Colombie-Britannique)  V2A 8X1\\n\\t\\t\\t250-770-4414\"         \n [2] \"Transports Canada\\n\\t\\t\\tC.P. 460\\n\\t\\t\\t3675 Byng Road\\n\\t\\t\\tPort Hardy (Colombie-Britannique)  V0N 2P0\\n\\t\\t\\t250-949-6424\"\n [3] \"Transports Canada\\n\\t\\t\\tC.P. 439\\n\\t\\t\\tSandspit (Colombie-Britannique)  V0T 1T0\\n\\t\\t\\t250-637-1149\"                        \n [4] \"Transports Canada\\n\\t\\t\\t12, rue Erie\\n\\t\\t\\tVictoria (Colombie-Britannique)  V8V 1Y4\\n\\t\\t\\t250-363-3578\"                    \n [5] \"Transports Canada\\n\\t\\t\\tC.P. 1059\\n\\t\\t\\tChurchill (Manitoba)  R0B 0E0\\n\\t\\t\\t204-675-8868\"                                  \n [6] \"Municipalité de la Côte-Nord-du Golfe-du Saint-Laurent\\n\\t\\t\\tChevery (Québec)  G0G 1G0\\n\\t\\t\\t418-787-2215\"                  \n [7] \"Transports Canada\\n\\t\\t\\tAirport Road\\n\\t\\t\\tLourdes-de-Blanc-Sablon (Québec)  G0G 1W0\\n\\t\\t\\t418-461-2514\"                   \n [8] \"Transports Canada\\n\\t\\t\\t1000, boul. Laure Est\\n\\t\\t\\tC.P. 2001\\n\\t\\t\\tSept-Îles (Québec)  G4R 4K2\\n\\t\\t\\t418-962-8211\"       \n [9] \"Municipalité de Natashquan\\n\\t\\t\\tAirport Road\\n\\t\\t\\tNatashquan (Québec)  G0G 2E0\\n\\t\\t\\t418-726-3273\"                       \n[10] \"Transports Canada\\n\\t\\t\\ta/s du conseil de bande\\n\\t\\t\\tEastmain (Québec)  J0M 1W0\\n\\t\\t\\t819-977-0333\"                       \n[11] \"Transports Canada\\n\\t\\t\\t1550 B, route de l'Aéroport\\n\\t\\t\\tHavre-Saint-Pierre (Québec)\\n\\t\\t\\tG0G 1P0\\n\\t\\t\\t418-538-0627\"   \n[12] \"Transports Canada\\n\\t\\t\\t1-210, chemin de l’Aéroport\\n\\t\\t\\tHavre-aux-Maisons (Québec)\\n\\t\\t\\tG4T 5L2\\n\\t\\t\\t418-969-2180\"    \n[13] \"Transports Canada\\n\\t\\t\\ta/s du conseil de bande\\n\\t\\t\\tWaskaganish (Québec)  J0M 1R0\\n\\t\\t\\t819-895-8925\"                    \n[14] \"Administration régionale Kativik\\n\\t\\t\\tC.P. 9\\n\\t\\t\\tKuujjuaq (Québec)  J0M 1C0\\n\\t\\t\\t819-964-2968\"                         \n[15] \"Société aéroportuaire de Schefferville\\n\\t\\t\\t78 Atlantic Road\\n\\t\\t\\tSchefferville (Québec)  G0G 2T0\\n\\t\\t\\t418-585-3544\"    \n[16] \"Transports Canada\\n\\t\\t\\ta/s du conseil de bande\\n\\t\\t\\tWemindji (Québec)  J0M 1L0\\n\\t\\t\\t819-978-3936\"                       \n[17] \"Transports Canada\\n\\t\\t\\t2 Airport Road\\n\\t\\t\\tWabush (Terre-Neuve)  A0R 1B0\\n\\t\\t\\t709-282-5412\"                             \n[18] \"Transports Canada\\n\\t\\t\\t1 Airport Road\\n\\t\\t\\tSt. Anthony (Terre-Neuve)  A0K 4S0\\n\\t\\t\\t709-454-3192\"                        \n[19] \"Administration aéroportuaire de Victoria\"                                                                                     \n[20] \"Administration de l’aéroport international de Vancouver\"                                                                      \n[21] \"Administration aéroportuaire de Prince George Inc. (en anglais seulement)\"                                                    \n[22] \"Ville de Kelowna (en anglais seulement)\"                                                                                      \n[23] \"Administration des aéroports régionaux d’Edmonton (en anglais seulement)\"                                                     \n[24] \"Administration aéroportuaire de Calgary (en anglais seulement)\"                                                               \n[25] \"Administration aéroportuaire de Saskatoon (en anglais seulement)\"                                                             \n[26] \"Administration aéroportuaire de Regina\"                                                                                       \n[27] \"Administration aéroportuaire de Winnipeg Inc.\"                                                                                \n[28] \"Administration de l’aéroport international de Thunder Bay Inc. (en anglais seulement)\"                                        \n[29] \"Administration de l’aéroport international du Grand London (en anglais seulement)\"                                            \n[30] \"Autorité aéroportuaire du Grand Toronto\"                                                                                      \n[31] \"Administration de l’aéroport international Macdonald-Cartier d'Ottawa\"                                                        \n[32] \"Aéroports de Montréal\"                                                                                                        \n[33] \"Aéroports de Montréal\"                                                                                                        \n[34] \"Aéroport de Québec Inc.\"                                                                                                      \n[35] \"Administration de l’aéroport international de Fredericton\"                                                                    \n[36] \"Administration de l’aéroport international du Grand Moncton Inc.\"                                                             \n[37] \"Aéroport de Saint John Inc.\"                                                                                                  \n[38] \"Administration de l’aéroport de Charlottetown Inc. (en anglais seulement)\"                                                    \n[39] \"Administration de l’aéroport international de Halifax\"                                                                        \n[40] \"Administration de l’aéroport international de Gander Inc. (en anglais seulement)\"                                             \n[41] \"Administration de l’aéroport international de St. John’s\"                                                                     \n[42] \"Gouvernement des Territoires du Nord-Ouest\"                                                                                   \n[43] \"Gouvernement du Nunavut\"                                                                                                      \n[44] \"Gouvernement du Yukon\"                                                                                                        \n```\n:::\n:::\n\n\nÀ vous de jouer!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}